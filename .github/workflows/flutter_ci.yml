name: Flutter CI

on:
  push:
    branches: [main, master]
    tags:
      - "v*"
  pull_request:
    branches: [main, master]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  FLUTTER_VERSION: 3.35.4

permissions:
  contents: write

jobs:
  auto-tag:
    name: Auto-tag from pubspec version
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version from pubspec.yaml
        id: ver
        shell: bash
        run: |
          set -euo pipefail
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Pubspec version: $VERSION"

      - name: Create tag if missing
        shell: bash
        run: |
          set -euo pipefail
          VERSION="${{ steps.ver.outputs.version }}"
          TAG="v${VERSION}"
          git fetch --tags
          if git tag -l "$TAG" | grep -q .; then
            echo "Tag $TAG already exists. Skipping."
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG"
          git push origin "$TAG"
  build-test:
    runs-on: ubuntu-latest
    needs: auto-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Generate localizations (l10n)
        run: flutter gen-l10n

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze
        run: flutter analyze --fatal-infos --fatal-warnings

      - name: Run tests
        run: flutter test

  build-matrix:
    name: Build & Upload Artifacts
    needs: build-test
    strategy:
      matrix:
        platform: [web, windows, android]
        include:
          - platform: web
            runs-on: ubuntu-latest
            build-cmd: flutter build web --release --base-href=/film-sms/ --no-wasm-dry-run
            artifact-path: build/web-release.zip
            artifact-name: film_sms-web-release
            post-cmd: |
              set -euo pipefail
              if [ ! -f web/.htaccess ]; then
                echo "ERROR: web/.htaccess not found" >&2
                ls -la web || true
                exit 1
              fi
              mkdir -p build/web
              cp -v web/.htaccess build/web/.htaccess
              echo "Listing build/web (showing .htaccess):"
              ls -la build/web | sed -n '1,200p'
              cd build/web
              zip -r ../web-release.zip .
              cd -
              ls -lh build/web-release.zip
          - platform: windows
            runs-on: windows-latest
            build-cmd: flutter build windows --release
            artifact-path: build/windows/x64/runner/Release/
            artifact-name: film_sms-windows-release
            post-cmd: ""
          - platform: android
            runs-on: ubuntu-latest
            build-cmd: flutter build apk --release
            artifact-path: build/app/outputs/flutter-apk/app-release.apk
            artifact-name: film_sms-android-release-apk
            post-cmd: ""
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Enable Windows desktop
        if: matrix.platform == 'windows'
        run: flutter config --enable-windows-desktop

      - name: Build ${{ matrix.platform }}
        run: ${{ matrix.build-cmd }}

      - name: Post-build steps
        if: ${{ matrix.post-cmd != '' }}
        run: ${{ matrix.post-cmd }}

      - name: Upload ${{ matrix.platform }} Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}
          retention-days: 14

  release-android:
    name: Android Release (signed APK + AAB)
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check last released version
        id: lastver
        run: |
          LASTVER=""
          if [ -f .last_version ]; then
            LASTVER=$(cat .last_version)
          fi
          echo "lastver=$LASTVER" >> $GITHUB_OUTPUT

      - name: Skip if version not changed
        if: steps.version.outputs.version == steps.lastver.outputs.lastver
        run: |
          echo "Version unchanged (${{ steps.version.outputs.version }}), skipping release."
          exit 0

      - name: Save new version
        run: echo "${{ steps.version.outputs.version }}" > .last_version

      # ...existing steps for setup, build, signing, and upload...
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Generate localizations (l10n)
        run: flutter gen-l10n

      - name: Check formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze
        run: flutter analyze --fatal-infos --fatal-warnings

      - name: Decode keystore from secrets
        shell: bash
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          set -euo pipefail
          test -n "${ANDROID_KEYSTORE_BASE64:-}" || { echo "ANDROID_KEYSTORE_BASE64 is not set"; exit 1; }
          mkdir -p android/app
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/upload-keystore.jks
          ls -lh android/app/upload-keystore.jks

      - name: Build signed Android APK
        env:
          SIGNING_STORE_FILE: android/upload-keystore.jks
          SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: flutter build apk --release

      - name: Upload Signed APK
        uses: actions/upload-artifact@v4
        with:
          name: film_sms-android-release-apk-signed
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Build signed Android App Bundle
        env:
          SIGNING_STORE_FILE: android/upload-keystore.jks
          SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: flutter build appbundle --release

      - name: Upload Signed AAB
        uses: actions/upload-artifact@v4
        with:
          name: film_sms-android-release-aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 30

  github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-matrix, release-android]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current version from pubspec.yaml
        id: version
        run: |
          VERSION=$(grep '^version:' pubspec.yaml | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check last released version
        id: lastver
        run: |
          LASTVER=""
          if [ -f .last_version ]; then
            LASTVER=$(cat .last_version)
          fi
          echo "lastver=$LASTVER" >> $GITHUB_OUTPUT

      - name: Skip if version not changed
        if: steps.version.outputs.version == steps.lastver.outputs.lastver
        run: |
          echo "Version unchanged (${{ steps.version.outputs.version }}), skipping release."
          exit 0

      # ...existing steps for artifact download and GitHub release...
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./artifacts/film_sms-web-release/build/web-release.zip
            ./artifacts/film_sms-windows-release/**/*
            ./artifacts/film_sms-android-release-apk-signed/build/app/outputs/flutter-apk/app-release.apk
